import{B as f}from"./prod-browser.becde89a.js";import{b as o}from"./paths.a2e04efa.js";import{e as c}from"./encode-uri.dfce78e4.js";const F=(r,t)=>{const e=t instanceof URLSearchParams;return t&&!e&&(t=new URLSearchParams(t)),t?`${r}?${t}`:r},g=()=>`${o}/namespaces`,u=({namespace:r})=>`${o}/namespaces/${r}`,v=()=>`${o}/select-namespace`,m=r=>`${u(r)}/workflows`,k=({namespace:r,query:t,search:e,page:s})=>F(m({namespace:r}),{query:t,search:e,...s&&{page:s}}),P=r=>`${u(r)}/archival`,n=({workflow:r,run:t,...e})=>{const s=c(r);return`${m(e)}/${s}/${t}`},$=r=>`${u(r)}/schedules`,S=({namespace:r})=>`${$({namespace:r})}/create`,U=({scheduleId:r,namespace:t})=>{const e=c(r);return`${$({namespace:t})}/${e}`},y=({scheduleId:r,namespace:t})=>{const e=c(r);return`${$({namespace:t})}/${e}/edit`},R=({queryParams:r,...t})=>{const e=`${n(t)}/history`;return F(`${e}`,r)},E=({eventId:r,...t})=>`${n(t)}/history/events/${r}`,W=({eventId:r,...t})=>`${n(t)}/history/event-groups/${r}`,L=r=>`${n(r)}/workers`,b=r=>{const t=c(r.queue);return`${u({namespace:r.namespace})}/task-queues/${t}`},q=r=>`${n(r)}/call-stack`,B=r=>`${n(r)}/query`,H=r=>`${n(r)}/pending-activities`,A=r=>{const{settings:t,searchParams:e,originUrl:s}=r,a=new URL(`${o}/auth/sso`,t.baseUrl);let i=t.auth.options??[];return i=[...i,"returnUrl"],i.forEach(h=>{if(!e)return;const l=e.get(h);l&&a.searchParams.set(h,l)}),!a.searchParams.get("returnUrl")&&s&&a.searchParams.set("returnUrl",s),a.toString()},N=(r="",t=f)=>{if(t){const e=new URL(`${o}/login`,window.location.origin);return e.searchParams.set("returnUrl",window.location.href),r&&e.searchParams.set("error",r),e.toString()}return`${o}/login`},O=(r,t)=>r&&t?`${o}/import/events/${r}/workflow/run/history/${t}`:`${o}/import/events`,Q=({namespace:r})=>`${o}/namespaces/${r}/batch-operations`,x=({namespace:r,jobId:t})=>`${o}/namespaces/${r}/batch-operations/${t}`;export{m as a,P as b,g as c,$ as d,Q as e,O as f,R as g,L as h,H as i,q as j,B as k,v as l,u as m,x as n,U as o,S as p,k as q,N as r,y as s,F as t,b as u,E as v,W as w,A as x};
