import{p as f}from"./data-encoder-config.d4b22ba6.js";import{c as m}from"./decode-payload.940dfbc8.js";import{g as l,a as h}from"./get-codec.8e077927.js";import{h as T}from"./has.183130b0.js";import{s as d,p as _}from"./parse-with-big-int.0036a80a.js";import{r as g,a as A,e as I}from"./route-for-api.d6873904.js";const b=e=>{const t=e.indexOf("["),r=e.indexOf("]");return e.slice(t+1,r).split(" ").filter(a=>a!=="__stack_trace").map(a=>a.endsWith(",")?a.slice(0,a.length-1):a)},O=async(e,t,r)=>(t=await t,{namespace:e,workflowId:t.id,queryType:r});async function u({workflow:e,namespace:t,queryType:r},a=fetch,n){e=await e;const o=await O(t,e,r),s=g("query",o);return await A(s,{options:{method:"POST",body:d({execution:{workflowId:e.id,runId:e.runId},query:{queryType:r,runId:e.runId}})},request:a,onError:n,notifyOnError:!1})}async function Q(e,t=fetch){return new Promise((r,a)=>{u({...e,queryType:"@@temporal-internal__list"},t,n=>{I(n.body)&&n.body.message.includes("@@temporal-internal__list")?r(b(n.body.message)):a(n)})})}async function P(e,t,r,a=fetch){return u(e,a).then(async n=>{const{queryResult:o}=n??{queryResult:{payloads:[]}};let s=o.payloads;try{if(s[0]){const i=l(t),p=h(t,f),y={...t,codec:{...t==null?void 0:t.codec,endpoint:i,passAccessToken:p}},c=await m({attributes:o,namespace:e.namespace,settings:y,accessToken:r});T(c,"payloads")&&Array.isArray(c.payloads)&&(s=c.payloads[0])}return _(s)}catch{return typeof s!="string"?d(s):s}})}async function q(e,t,r){return P({...e,queryType:"__stack_trace"},t,r)}export{Q as a,P as b,q as g};
