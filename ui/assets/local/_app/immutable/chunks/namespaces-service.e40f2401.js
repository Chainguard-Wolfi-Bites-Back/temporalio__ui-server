import{n as i}from"./namespaces.34a7a7f7.js";import{t as f}from"./toaster.afacaedf.js";import{p as u}from"./paginated.5be9186a.js";import{r as p,a as h}from"./route-for-api.3a6f6757.js";import{a as m,b as y}from"./screaming-enums.485ed739.js";const v={namespaces:[]},l=a=>{var e;return a.config&&(a.config.historyArchivalState=m(a.config.historyArchivalState),a.config.visibilityArchivalState=m(a.config.visibilityArchivalState)),a.namespaceInfo&&(a.namespaceInfo.state=y((e=a.namespaceInfo)==null?void 0:e.state)),a};async function I(a,e=fetch){const{showTemporalSystemNamespace:n,runtimeEnvironment:s}=a;if(s.isCloud){i.set([]);return}try{const o=p("namespaces"),t=await u(async c=>h(o,{request:e,token:c,onError:()=>f.push({variant:"error",message:"Unable to fetch namespaces"})})),r=((t==null?void 0:t.namespaces)??[]).filter(c=>n||c.namespaceInfo.name!=="temporal-system").map(l);i.set(r)}catch{i.set([])}}async function g(a,e,n=fetch){var r;const[s]=v.namespaces;if((r=e==null?void 0:e.runtimeEnvironment)!=null&&r.isCloud)return s;const o=p("namespace",{namespace:a}),t=await h(o,{request:n,onError:()=>f.push({variant:"error",message:"Unable to fetch namespaces"})});return t?l(t):s}export{g as a,I as f};
