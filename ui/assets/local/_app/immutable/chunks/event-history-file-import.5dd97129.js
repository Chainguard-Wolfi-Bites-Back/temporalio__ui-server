import{S as $,b as C,a as U,m as k,c as w,C as F,p as I,d as N,D as T,u as g,f as y,E as x,U as A,j as B,g as j,k as b,F as G,L as h,w as H,x as J}from"./index.d29c66be.js";import{d as L}from"./route-for.1a0b88e7.js";import{g as O}from"./navigation.07e78d76.js";import{B as q}from"./button.e7112b29.js";import{t as D}from"./index.c3774092.js";import{t as S}from"./toaster.fda31b2d.js";import{i as P,a as R}from"./import-events.d74da7cc.js";import{p as W}from"./parse-with-big-int.02af2f95.js";import{g as z}from"./index.e1962a6e.js";import{p as K}from"./stores.e43a434f.js";import{a as M}from"./auth-user.ead5c000.js";import{l as Q}from"./namespaces.52575875.js";function V(r){let o;return{c(){o=H("Import")},l(e){o=J(e,"Import")},m(e,s){y(e,o,s)},d(e){e&&b(o)}}}function X(r){let o,e,s,p,c,a;return s=new q({props:{icon:"file-upload",disabled:!r[0],$$slots:{default:[V]},$$scope:{ctx:r}}}),s.$on("click",r[2]),{c(){o=k("input"),e=w(),F(s.$$.fragment),this.h()},l(t){o=I(t,"INPUT",{class:!0,type:!0,accept:!0}),e=N(t),T(s.$$.fragment,t),this.h()},h(){g(o,"class","import-input block rounded-md border border-gray-200 p-2"),g(o,"type","file"),g(o,"accept",".json")},m(t,i){y(t,o,i),y(t,e,i),x(s,t,i),p=!0,c||(a=A(o,"change",r[1]),c=!0)},p(t,[i]){const f={};i&1&&(f.disabled=!t[0]),i&128&&(f.$$scope={dirty:i,ctx:t}),s.$set(f)},i(t){p||(B(s.$$.fragment,t),p=!0)},o(t){j(s.$$.fragment,t),p=!1},d(t){t&&b(o),t&&b(e),G(s,t),c=!1,a()}}}function Y(r,o,e){let s,p,c;h(r,Q,n=>e(4,s=n)),h(r,M,n=>e(5,p=n)),h(r,K,n=>e(6,c=n));let a,t=!1;return[t,async n=>{var l;const m=n.target,d=(l=m==null?void 0:m.files)===null||l===void 0?void 0:l[0],u=new FileReader;d&&(u.readAsText(d),u.onload=()=>{var _,v;try{const E=(v=(_=u==null?void 0:u.result)===null||_===void 0?void 0:_.toString())!==null&&v!==void 0?v:"";a=W(E),e(0,t=!0)}catch{S.push({variant:"error",message:"Could not parse JSON"}),e(0,t=!1)}})},async()=>{const{settings:n}=c.data;try{const l=await D({response:Array.isArray(a)?a:a==null?void 0:a.events,namespace:s,settings:n,accessToken:p.accessToken}),m=z(l);P.set(l),R.set(m),e(0,t=!1);const d=L(s,"feed");O(d)}catch(l){console.error(l),S.push({variant:"error",message:"Could not create event history from JSON"})}}]}class mt extends ${constructor(o){super(),C(this,o,Y,X,U,{})}}export{mt as E};
