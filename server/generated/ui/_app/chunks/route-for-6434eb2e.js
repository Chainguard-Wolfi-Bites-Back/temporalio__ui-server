var c=Object.getOwnPropertySymbols;var k=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable;var w=(o,r)=>{var n={};for(var f in o)k.call(o,f)&&r.indexOf(f)<0&&(n[f]=o[f]);if(o!=null&&c)for(var f of c(o))r.indexOf(f)<0&&e.call(o,f)&&(n[f]=o[f]);return n};const l=({namespace:o})=>`/namespaces/${o}`,i=o=>`${l(o)}/workflows`,u=f=>{var t=f,{workflowId:o,runId:r}=t,n=w(t,["workflowId","runId"]);return`${i(n)}/${o}/${r}`},s=(o,r)=>{if(!r)return`${u(o)}/history`;if(r==="summary")return`${u(o)}/history/summary`;if(r==="compact")return`${u(o)}/history/compact`;if(r==="json")return`${u(o)}/history/json`},y=o=>`${u(o)}/workers`;function F(o,r){let n;return o==="workflows"&&(n=i(r)),o==="workflow"&&(n=u(r)),o==="workflow.events"&&(n=s(r)),o==="workflow.events.summary"&&(n=s(r,"summary")),o==="workflow.events.compact"&&(n=s(r,"compact")),o==="workflow.events.json"&&(n=s(r,"json")),o==="workflow.query"&&(n=u(r)+"/query"),o==="workflow.stack-trace"&&(n=u(r)+"/stack-trace"),o==="workers"&&(n=y(r)),r.query?`${n}?${r.query}`:n}export{F as r};
