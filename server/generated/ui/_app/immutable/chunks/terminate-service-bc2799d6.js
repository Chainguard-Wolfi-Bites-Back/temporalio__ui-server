import{d as n,r as g,w as i}from"./index-f75d6a2a.js";import{p as u}from"./stores-0ab38b9a.js";import{a as v,b as I}from"./workflow-service-a7e335ae.js";import{w as O}from"./with-loading-f07bedaf.js";import{p as P}from"./route-for-369a155d.js";import{i as W,c as d}from"./version-check-652b3f87.js";import{t as A}from"./event-view-7fadd508.js";import{s as h}from"./parse-with-big-int-561ccb8b.js";import{r as l,a as p}from"./route-for-api-31ba547b.js";import{v as C}from"./v4-f2cd1a04.js";const y=o=>{var s;return(s=o==null?void 0:o.visibilityStore)==null?void 0:s.includes("elasticsearch")},V=n([u],([o])=>{var s,t,r;return(r=(t=(s=o.stuff)==null?void 0:s.settings)==null?void 0:t.runtimeEnvironment)==null?void 0:r.isCloud}),_=n([A,d],([o,s])=>W(o,"1.18.0")&&y(s)),E=n([d,V],([o,s])=>{var t;return(t=y(o))!=null?t:s}),R=i(0),T=n([u],([o])=>o.params.namespace),q=n([u],([o])=>o.url.searchParams.get("query")),B=n([u],([o])=>o.url.pathname),F=n([T,q,B,R,E],([o,s,t,r,e])=>({namespace:o,query:s,path:t,refresh:r,supportsAdvancedVisibility:e})),$=o=>{L.set(o)},Q=o=>F.subscribe(({namespace:s,query:t,path:r,supportsAdvancedVisibility:e})=>{r==`${P}/namespaces/${s}/workflows`&&O(x,S,async()=>{const{workflows:c,error:a}=await v(s,{query:t});if(o(c),e){const f=await I(s,t);$(f)}a?m.set(a):m.set("")})}),j=i({parameters:{},searchType:"basic"}),S=i(!0),x=i(!0),L=i({count:0,totalCount:0}),m=i(""),oo=g([],Q),so=i("");async function to({workflow:o,namespace:s,reason:t}){const r=await l("workflow.terminate",{namespace:s,workflowId:o.id,runId:o.runId});return await p(r,{options:{method:"POST",body:h({reason:t})},shouldRetry:!1,notifyOnError:!1})}async function ro({namespace:o,workflowExecutions:s,reason:t}){const r=await l("workflows.batch.terminate",{namespace:o}),w=s.map(a=>a.runId).reduce((a,f,b,k)=>(a+=`RunId="${f}"`,b!==k.length-1&&(a+=" OR "),a),""),c=C();return await p(r,{options:{method:"POST",body:h({jobId:c,namespace:o,visibilityQuery:w,reason:t,terminationOperation:{}})},shouldRetry:!1,notifyOnError:!1}),c}async function N({namespace:o,jobId:s}){return new Promise((t,r)=>{z({namespace:o,jobId:s}).then(({state:e})=>{e==="Failed"?r():e!=="Running"?t():setTimeout(async()=>{try{t(N({namespace:o,jobId:s}))}catch{r()}},1e3)})})}async function z({jobId:o,namespace:s}){const t=await l("workflows.batch.describe",{namespace:s});return p(t,{params:{jobId:o}})}export{so as a,oo as b,m as c,L as d,ro as e,_ as f,x as l,N as p,R as r,E as s,to as t,S as u,j as w};
