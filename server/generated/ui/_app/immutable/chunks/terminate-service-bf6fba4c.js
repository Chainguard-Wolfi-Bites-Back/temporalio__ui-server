import{d as e,r as k,w as n}from"./index-f75d6a2a.js";import{p as c}from"./stores-0ab38b9a.js";import{a as g,b as v}from"./workflow-service-a7e335ae.js";import{w as I}from"./with-loading-f07bedaf.js";import{p as W}from"./route-for-369a155d.js";import{i as O,c as p}from"./version-check-652b3f87.js";import{t as P}from"./event-view-7fadd508.js";import{s as m}from"./parse-with-big-int-561ccb8b.js";import{r as u,a as f}from"./route-for-api-31ba547b.js";import{v as A}from"./v4-f2cd1a04.js";const d=t=>{var o;return(o=t==null?void 0:t.visibilityStore)==null?void 0:o.includes("elasticsearch")},C=e([c],([t])=>{var o,r,s;return(s=(r=(o=t.stuff)==null?void 0:o.settings)==null?void 0:r.runtimeEnvironment)==null?void 0:s.isCloud}),_=e([P,p],([t,o])=>O(t,"1.18.0")&&d(o)),B=e([p,C],([t,o])=>{var r;return(r=d(t))!=null?r:o}),T=n(0),V=e([c],([t])=>t.params.namespace),q=e([c],([t])=>t.url.searchParams.get("query")),E=e([c],([t])=>t.url.pathname),R=e([V,q,E,T,B],([t,o,r,s,a])=>({namespace:t,query:o,path:r,refresh:s,supportsAdvancedVisibility:a})),F=t=>{x.set(t)},Q=t=>R.subscribe(({namespace:o,query:r,path:s,supportsAdvancedVisibility:a})=>{s==`${W}/namespaces/${o}/workflows`&&I($,S,async()=>{const{workflows:h,error:l}=await g(o,{query:r});if(t(h),a){const b=await v(o,r);F(b)}l?w.set(l):w.set("")})}),j=n({parameters:{},searchType:"basic"}),S=n(!0),$=n(!0),x=n({count:0,totalCount:0}),w=n(""),tt=k([],Q),ot=n("");async function rt({workflow:t,namespace:o,reason:r}){const s=await u("workflow.terminate",{namespace:o,workflowId:t.id,runId:t.runId});return await f(s,{options:{method:"POST",body:m({reason:r})},shouldRetry:!1,notifyOnError:!1})}const L=t=>t.map(r=>r.runId).reduce((r,s,a,i)=>(r+=`RunId="${s}"`,a!==i.length-1&&(r+=" OR "),r),"");async function st({namespace:t,reason:o,workflows:r}){const s=L(r);return y(t,s,o)}async function at({namespace:t,query:o,reason:r}){return y(t,o,r)}async function y(t,o,r){const s=await u("workflows.batch.terminate",{namespace:t}),a=A();return await f(s,{options:{method:"POST",body:m({jobId:a,namespace:t,visibilityQuery:o,reason:r,terminationOperation:{}})},shouldRetry:!1,notifyOnError:!1}),a}async function N({namespace:t,jobId:o}){return new Promise((r,s)=>{z({namespace:t,jobId:o}).then(({state:a,completeOperationCount:i})=>{a==="Failed"?s():a!=="Running"?r(i):setTimeout(()=>{try{r(N({namespace:t,jobId:o}))}catch{s()}},1e3)})})}async function z({jobId:t,namespace:o}){const r=await u("workflows.batch.describe",{namespace:o});return f(r,{params:{jobId:t}})}export{ot as a,tt as b,w as c,x as d,at as e,st as f,_ as g,$ as l,N as p,T as r,B as s,rt as t,S as u,j as w};
