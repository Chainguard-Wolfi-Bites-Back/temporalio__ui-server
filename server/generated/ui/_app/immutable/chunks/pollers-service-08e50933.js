import{r as o,a as y}from"./route-for-api-54677e80.js";async function A(k,t={returnAllPollers:!1},c=fetch){const T=await o("task-queue",k),u=await y(T,{request:c,params:{taskQueueType:"1"}}),s=await y(T,{request:c,params:{taskQueueType:"2"}});s.pollers.forEach(e=>{e.taskQueueTypes=["ACTIVITY"]}),u.pollers.forEach(e=>{e.taskQueueTypes=["WORKFLOW"]});const i=e=>(a,r)=>{const l=a[r.identity]||{lastAccessTime:void 0,taskQueueTypes:[]};return a[r.identity]={lastAccessTime:!l.lastAccessTime||l.lastAccessTime<r.lastAccessTime?r.lastAccessTime:l.lastAccessTime,taskQueueTypes:l.taskQueueTypes.concat([e])},a};s.pollers.filter(e=>u.pollers.some(a=>{if(e.identity===a.identity)return e.taskQueueTypes=[...a.taskQueueTypes,...e.taskQueueTypes],e})),s.pollers.reduce(i("ACTIVITY"),u.pollers.reduce(i("WORKFLOW"),{}));const n=(t==null?void 0:t.returnAllPollers)&&!s.pollers.length?u.pollers:s.pollers,m=(t==null?void 0:t.returnAllPollers)&&!s.pollers.length?u.taskQueueStatus:s.taskQueueStatus;return{pollers:n,taskQueueStatus:m}}export{A as g};
