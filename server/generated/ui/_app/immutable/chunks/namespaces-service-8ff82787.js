import{n as p}from"./notifications-7e703e91.js";import{n as m}from"./namespaces-c4de61fa.js";import{p as u}from"./paginated-a5f6e575.js";import{r as i,a as f}from"./route-for-api-652ea8c7.js";const h={namespaces:[]};async function E(t,a=fetch){var r;t.runtimeEnvironment.isCloud&&m.set([]);try{const e=await i("namespaces"),o=await u(async c=>f(e,{request:a,token:c,onError:()=>p.add("error","Unable to fetch namespaces")})),{showTemporalSystemNamespace:n}=t,s=((r=o==null?void 0:o.namespaces)!=null?r:[]).filter(c=>n||c.namespaceInfo.name!=="temporal-system");m.set(s)}catch{m.set([])}}async function N(t,a,r=fetch){var s;const[e]=h.namespaces;if((s=a==null?void 0:a.runtimeEnvironment)!=null&&s.isCloud)return e;const o=await i("namespace",{namespace:t}),n=await f(o,{request:r,onError:()=>p.add("error","Unable to fetch namespaces")});return n!=null?n:e}export{N as a,E as f};
