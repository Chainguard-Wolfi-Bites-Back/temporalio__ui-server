import{f as w}from"./format-date-c1755997.js";import{a as h,b as p}from"./index-7ac5c549.js";import{c as a}from"./format-camel-case-13aef7c6.js";const E={key:"",value:""},x=new Set(["activityId","attempt","binaryChecksum","identity","parentInitiatedEventId","requestId","scheduledEventId","startedEventId","lastHeartbeatTime","scheduledTime","expirationTime"]),C=t=>x.has(t),l=(t,e)=>!(e===null||e===void 0||e===""||e==="0s"||t==="type"),I=t=>!(t===null||t===void 0||t===""||Array.isArray(t)&&!t.length),V=t=>{var e,r,o;return typeof t=="string"?t:(o=(r=(e=t==null?void 0:t.payloads)!=null?e:t==null?void 0:t.indexedFields)!=null?r:t==null?void 0:t.points)!=null?o:t},T=["baseRunId","continuedExecutionRunId","firstExecutionRunId","newExecutionRunId","newRunId","originalExecutionRunId"],$=t=>{for(const e of T)if(t===e)return!0;return!1},S=["taskQueueName"],B=t=>{for(const e of S)if(t===e)return!0;return!1},b=["workflowExecutionWorkflowId","workflowExecutionRunId"],M=(t,e)=>{const r=Boolean((e==null?void 0:e.workflowExecutionWorkflowId)&&(e==null?void 0:e.workflowExecutionRunId));for(const o of b)if(t===o&&r)return!0;return!1},f=(t,e)=>{if(typeof e=="object"){const[r]=Object.keys(e);return{key:t+a(r),value:e[r]}}else return{key:t,value:e.toString()}},j=["failure","input","activityType","parentInitiatedEventId","workflowExecution","workflowType","taskQueue"],D=({attributes:t})=>{for(const[e,r]of Object.entries(t))if(l(e,r))return f(e,r)},k=t=>{var r,o,n,i,u;const e=D(t);if(p(t)){const s=(i=(n=(o=(r=t.markerRecordedEventAttributes)==null?void 0:r.details)==null?void 0:o.data)==null?void 0:n.payloads)==null?void 0:i[0],c=(u=s==null?void 0:s.ActivityType)!=null?u:s==null?void 0:s.activity_type;if(c)return f("ActivityType",c)}for(const[s,c]of Object.entries(t.attributes))for(const d of j)if(s===d&&l(s,c))return f(s,c);return e},R=({lastEvent:t})=>k(t),U=t=>t?h(t)?R(t):k(t):E,L=new Set(["header"]),O=new Set(["taskQueue","retryPolicy","parentWorkflowExecution","workflowExecution"]),Q=new Set(["maximumAttempts"]),y="Unlimited",A="No Expiration",q=(t,e)=>t===0?A:e,z=(t,e)=>t===0?y:t-e,H=t=>t===0?y:t,G=(t,e)=>t==="maximumAttempts"&&e===0?y:e,P=(t,e)=>{if(O.has(e)&&typeof t[e]=="object"){for(const[r,o]of Object.entries(t[e]))I(o)&&(Q.has(r)?t[`${e}${a(r)}`]=G(r,o):t[`${e}${a(r)}`]=o);delete t[e]}},_=(t,{compact:e}={compact:!1})=>{const r={};e&&(r.eventTime=w(t.eventTime));for(const[o,n]of Object.entries(t.attributes)){const i=l(o,n);!L.has(o)&&i&&(r[o]=n),P(r,o)}return r},m=["summary","parent","activity","taskQueue","schedule","retryPolicy","workflow","searchAttributes"],v={activity:{label:"Activity",color:"gray"},parent:{label:"Parent",color:"gray"},retryPolicy:{label:"Retry Policy",color:"gray"},schedule:{label:"Schedule",color:"gray"},searchAttributes:{label:"Search Attributes",color:"gray"},summary:{label:"Summary",color:"gray"},taskQueue:{label:"Task Queue",color:"gray"},workflow:{label:"Workflow",color:"gray"}},W=(t,e)=>{var r,o;t.category==="activity"&&((r=e==null?void 0:e.activity)==null?void 0:r.length)&&(e.summary=[...e.activity,...e.summary],e.activity=[]),t.category==="activity"&&((o=e==null?void 0:e.workflow)==null?void 0:o.length)&&(e.summary=[...e.summary,...e.workflow],e.workflow=[])},g=t=>{const e=new Set(["summary","searchAttributes"]);for(const[r,o]of Object.entries(t))o.length===1&&!e.has(r)&&(t.summary=[...t.summary,...o],t[r]=[])},J=(t,e)=>{const r={};m.forEach(o=>{o==="summary"?r[o]=Object.keys(e):r[o]=[]});for(const o of Object.keys(e)){const n=m.find(i=>o.includes(i));n&&(r[n]=[o,...r[n]],r.summary=r.summary.filter(i=>i!==o))}return W(t,r),g(r),r};export{z as a,M as b,B as c,C as d,v as e,q as f,V as g,_ as h,J as i,U as j,H as k,$ as s};
