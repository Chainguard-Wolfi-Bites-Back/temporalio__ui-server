import{a6 as $}from"./index-9d69cec5.js";import{s as C}from"./settings-34c5dae2.js";import{s as D}from"./simplify-attributes-db1e2585.js";import{r as A,a as b,b as q}from"./route-for-api-d16befb1.js";import{i as K,b as P,t as h,c as Q}from"./format-date-eb94f038.js";const R=(t=C)=>!$(t).disableWriteActions,F=(t=[])=>t.map(o=>{const n=D(o,!0),i=o.activityId;return{...n,id:i}}),W=t=>{var x,g,y,E,T,I;const o=t.workflowExecutionInfo.type.name,n=t.workflowExecutionInfo.execution.workflowId,i=t.workflowExecutionInfo.execution.runId,l=String(t.workflowExecutionInfo.startTime),w=String(t.workflowExecutionInfo.closeTime),r=t.workflowExecutionInfo.status,f=t.workflowExecutionInfo.status==="Running",d=t.workflowExecutionInfo.historyLength,m=`/workflows/${n}/${i}`,k=(g=(x=t==null?void 0:t.executionConfig)==null?void 0:x.taskQueue)==null?void 0:g.name,c=(y=t==null?void 0:t.workflowExecutionInfo)==null?void 0:y.parentNamespaceId,e=(E=t==null?void 0:t.workflowExecutionInfo)==null?void 0:E.parentExecution,s=t.workflowExecutionInfo.stateTransitionCount,a=(T=t.executionConfig)==null?void 0:T.defaultWorkflowTaskTimeout,u=F(t.pendingActivities),S=(I=t==null?void 0:t.pendingChildren)!=null?I:[];return{name:o,id:n,runId:i,startTime:l,endTime:w,status:r,historyEvents:d,url:m,taskQueue:k,pendingActivities:u,pendingChildren:S,parentNamespaceId:c,parent:e,stateTransitionCount:s,isRunning:f,defaultWorkflowTaskTimeout:a,get canBeTerminated(){return f&&R()}}},N=t=>(t.executions||[]).map(o=>W({workflowExecutionInfo:o})),B={workflowId:"WorkflowId",workflowType:"WorkflowType",timeRange:"StartTime",executionStatus:"ExecutionStatus",closeTime:"CloseTime"},j=["workflowId","workflowType","timeRange","executionStatus","closeTime"],L=t=>!(t===null||t===void 0||t===""||typeof t=="string"&&t==="undefined"),O=t=>{if(typeof t!="string")return!1;for(const o of j)if(o===t)return!0;return!1},U=(t,o,n)=>{const i=B[t];return o==="All"?"":K(o)||P(o)?n?`${i} > "${h(o)}"`:`${i} BETWEEN "${h(o)}" AND "${Q()}"`:`${i}="${o}"`},_=(t,o)=>Object.entries(t).map(([n,i])=>{if(O(n)&&L(i))return U(n,i,o)}).filter(Boolean),z=(t,o=!1)=>_(t,o).join(" and "),V=async(t,o,n=fetch,i=!1)=>{var c;const l=decodeURIComponent(o.query||z(o,i)),w=i?"workflows.archived":"workflows";let r="";const f=e=>{var s,a,u;q(e),((s=e==null?void 0:e.body)==null?void 0:s.message)||(e==null?void 0:e.status)?r=(u=(a=e==null?void 0:e.body)==null?void 0:a.message)!=null?u:`Error fetching workflows: ${e.status}: ${e.statusText}`:r="Error fetching workflows: Server failed to respond"},d=await A(w,{namespace:t}),{executions:m,nextPageToken:k}=(c=await b(d,{params:{query:l},onError:f,handleError:f,request:n}))!=null?c:{executions:[],nextPageToken:""};return{workflows:N({executions:m}),nextPageToken:String(k),error:r}},X=async(t,o,n=fetch)=>V(t,o,n,!0);async function Y(t,o=fetch){const n=await A("workflow",t);return b(n,{request:o}).then(W)}export{V as a,X as b,Y as f,z as t};
