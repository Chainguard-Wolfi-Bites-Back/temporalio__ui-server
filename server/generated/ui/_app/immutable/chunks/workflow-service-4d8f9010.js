import{a6 as S}from"./index-9ea626a2.js";import{s as C}from"./settings-35422e61.js";import{s as D}from"./simplify-attributes-34cbbe81.js";import{r as h,a as A,b as q}from"./route-for-api-ad1e0920.js";import{i as F,b as K,t as I,c as P}from"./format-date-2e95557a.js";const Q=(t=C)=>!S(t).disableWriteActions,R=(t=[])=>t.map(o=>{const i=D(o,!0),n=o.activityId;return{...i,id:n}}),W=t=>{var m,x,g,y,E,T;const o=t.workflowExecutionInfo.type.name,i=t.workflowExecutionInfo.execution.workflowId,n=t.workflowExecutionInfo.execution.runId,a=String(t.workflowExecutionInfo.startTime),l=String(t.workflowExecutionInfo.closeTime),r=t.workflowExecutionInfo.status,c=t.workflowExecutionInfo.status==="Running",w=t.workflowExecutionInfo.historyLength,d=`/workflows/${i}/${n}`,k=(x=(m=t==null?void 0:t.executionConfig)==null?void 0:m.taskQueue)==null?void 0:x.name,f=(g=t==null?void 0:t.workflowExecutionInfo)==null?void 0:g.parentNamespaceId,e=(y=t==null?void 0:t.workflowExecutionInfo)==null?void 0:y.parentExecution,u=t.workflowExecutionInfo.stateTransitionCount,s=(E=t.executionConfig)==null?void 0:E.defaultWorkflowTaskTimeout,b=R(t.pendingActivities),$=(T=t==null?void 0:t.pendingChildren)!=null?T:[];return{name:o,id:i,runId:n,startTime:a,endTime:l,status:r,historyEvents:w,url:d,taskQueue:k,pendingActivities:b,pendingChildren:$,parentNamespaceId:f,parent:e,stateTransitionCount:u,isRunning:c,defaultWorkflowTaskTimeout:s,get canBeTerminated(){return c&&Q()}}},N=t=>(t.executions||[]).map(o=>W({workflowExecutionInfo:o})),B={workflowId:"WorkflowId",workflowType:"WorkflowType",timeRange:"StartTime",executionStatus:"ExecutionStatus",closeTime:"CloseTime"},j=["workflowId","workflowType","timeRange","executionStatus","closeTime"],L=t=>!(t===null||t===void 0||t===""||typeof t=="string"&&t==="undefined"),O=t=>{if(typeof t!="string")return!1;for(const o of j)if(o===t)return!0;return!1},U=(t,o,i)=>{const n=B[t];return o==="All"?"":F(o)||K(o)?i?`${n} > "${I(o)}"`:`${n} BETWEEN "${I(o)}" AND "${P()}"`:`${n}="${o}"`},_=(t,o)=>Object.entries(t).map(([i,n])=>{if(O(i)&&L(n))return U(i,n,o)}).filter(Boolean),z=(t,o=!1)=>_(t,o).join(" and "),V=async(t,o,i=fetch,n=!1)=>{var f;const a=decodeURIComponent(o.query||z(o,n)),l=n?"workflows.archived":"workflows";let r="";const c=e=>{var u,s;q(e),r=(s=(u=e==null?void 0:e.body)==null?void 0:u.message)!=null?s:`Error fetching workflows: ${e.status}: ${e.statusText}`},w=()=>{r="Failed to fetch workflows"},{executions:d,nextPageToken:k}=(f=await h(A(l,{namespace:t}),{params:{query:a},onError:c,handleError:w,request:i}))!=null?f:{executions:[],nextPageToken:""};return{workflows:N({executions:d}),nextPageToken:String(k),error:r}},Y=async(t,o,i=fetch)=>V(t,o,i,!0);async function Z(t,o=fetch){return h(A("workflow",t),{request:o}).then(W)}export{V as a,Y as b,Z as f,z as t};
