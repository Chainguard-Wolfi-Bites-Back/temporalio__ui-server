import{d as p}from"./is-http-135b6a03.js";import{g as l,c as g,d as v}from"./get-encoder-endpoint-28ae794c.js";import{f as y}from"./format-date-c1755997.js";import{g as C,f as b}from"./index-7e3f25d2.js";import{g as A}from"./get-event-categorization-2cfb578f.js";import{s as E}from"./simplify-attributes-055c76f2.js";const S=["Unspecified","Scheduled","Open","New","Started","Initiated","Running","Completed","Fired","CancelRequested","TimedOut","Signaled","Canceled","Failed","Terminated"],T=t=>{if(t.includes("RequestCancel"))return"CancelRequested";for(const n of S)if(t.includes(n))return n};async function w({historyEvent:t,namespace:n,settings:e,accessToken:s},{convertWithCodec:a=g,decodeAttributes:o=v,encoderEndpoint:i=p}={}){const{key:c,attributes:r}=b(t),d=l(e,i),u={...e,codec:{...e==null?void 0:e.codec,endpoint:d}},m=await a({attributes:r,namespace:n,settings:u,accessToken:s}),f=o(m);return{type:c,...f}}const R=async({historyEvent:t,namespace:n,settings:e,accessToken:s})=>{const a=String(t.eventId),o=t.eventType,i=y(String(t.eventTime)),c=T(o),r=A(o),d=await w({historyEvent:t,namespace:n,settings:e,accessToken:s}).then(u=>E(u));return{...t,attributes:d,eventType:o,classification:c,category:r,id:a,name:o,timestamp:i}},x=async({response:t,namespace:n,settings:e,accessToken:s})=>{const a=await Promise.all(t.map(i=>R({historyEvent:i,namespace:n,settings:e,accessToken:s}))),o=C(a);return{events:a,eventGroups:o}};export{x as t};
